# You may configure secrets via this file due to how we configured
#  src/main/resources/schema/server.recon.
# If you choose to use this file, uncomment the properties below and replace with
#  correct values (which will likely resemble the fake credentials below).

#bootstrap.servers=bla-bl4h.us-west-2.aws.confluent.cloud:9092
#ccloud.api.key=BL4HBL4HBL4HBL4H
#ccloud.api.secret=BLah1+BLah1BLah1/BLah1+BLah1/BLah1BLah1BLah1
#schema.registry.url=https://blah-bl4h.us-east-2.aws.confluent.cloud
#ccloud.schema.registry.key=BL4HBL4HBL4HBL4H
#ccloud.schema.registry.secret=BLah1+BLah1BLah1/BLah1+BLah1/BLah1BLah1BLah1

################################################################################
#                     NOTE TO DEMO DEPLOYMENT MAINTAINERS                      #
################################################################################
# Ensure the availability of a correctly populated secret file mounted under
#  a top-level secret.properties for the deployment to work without requiring
#  changes to server.recon and/or k8s.yml.
# This is sufficient due to the nstream.adapter.common.AdapterUtils#openFileAsStream
#  implementation, which is invoked by the ProvisionLoader step.
# The file name is first treated as an absolute path, falling back to a Java
#  resource; the fallback is expected on a direct clone/run, but undesirable
#  from a Kubernetes deployment.
# The following command should be sufficient to populate the secret
#  (assuming a correctly populated src/.../secret.properties):
#  kubectl -n demo-cflt-bike-rental create secret generic bike-rental-secret\
#    --from-file=src/main/resources/secret.properties
